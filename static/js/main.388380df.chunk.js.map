{"version":3,"sources":["actions/index.js","reducers/pizzaReducer.js","reducers/index.js","components/Pizza.js","components/PizzaList.js","components/Header.js","components/images/githubLogo.png","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["ADD_PIZZA","DELETE_PIZZA","pizzaReducer","state","action","type","payload","name","composition","index","slice","combineReducers","pizzas","Pizza","props","data","dispatch","useDispatch","useState","setName","crust","addCrust","cheese","addCheese","toppings","addTopping","radioComponent","func","map","elem","selected","className","value","onChange","e","target","placeholder","onClick","addPizza","includes","filter","multiComponent","PizzaList","pizzaList","useSelector","pizza","item","Header","Footer","href","src","logo","store","createStore","reducers","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.388380df.chunk.js","sourcesContent":["export const ADD_PIZZA = \"ADD_PIZZA\"\nexport const DELETE_PIZZA = \"DELETE_PIZZA\"\nexport const addPizza = (name, composition) => {\n  return {\n    type: ADD_PIZZA,\n    payload: { name, composition }\n  }\n}\nexport const deletePizza = (index) => {\n    return {\n      type: DELETE_PIZZA,\n      payload: { index }\n    }\n}","import { ADD_PIZZA, DELETE_PIZZA } from '../actions'\nconst pizzaReducer = (state = [], action) => {\n  switch(action.type) {\n    case ADD_PIZZA:\n      const { name, composition } = action.payload\n      return [...state, { name, composition }]\n\n    case DELETE_PIZZA:\n      const { index } = action.payload\n      return [...state.slice(0, index), ...state.slice(index + 1)]\n\n    default:\n      return state\n  }\n}\n\nexport default pizzaReducer\n","import { combineReducers } from 'redux'\nimport pizzaReducer from './pizzaReducer'\n\nexport default combineReducers({\n  pizzas: pizzaReducer\n})\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { addPizza } from '../actions'\n\nimport './styles/Pizza.css'\n\nfunction Pizza(props) {\n    const {data} = props\n\n    const dispatch = useDispatch()\n    const [name, setName] = useState('')\n    const [crust, addCrust] = useState('')\n    const [cheese, addCheese] = useState('')\n    const [toppings, addTopping] = useState([])\n\n    function multiComponent(data, func) {\n        return data.map((elem) => {\n            const selected = toppings.includes(elem) ? 'selected' : ''\n            return (\n                <label className={`pizzaCard ${selected}`}>\n                    <h3>{elem}</h3>\n                    <input type='checkbox' onClick={(e) => {\n                        toppings.includes(elem) ? func(toppings.filter(e => e !== elem)) : func([...toppings, elem])\n                    }}/>\n                </label>\n            )\n        })\n    }\n    function radioComponent(data, func) {\n        return data.map((elem) => {\n            const selected = crust === elem || cheese === elem ? 'selected' : ''\n            return (\n                <label className={`pizzaCard ${selected}`}>\n                    <h3>{elem}</h3>\n                    <input type='radio' name={data} value={elem} onChange={(e) => {\n                        func(elem)\n                    }}/>\n                </label>\n            )\n        })\n    }\n    return (\n        <div className='pizza'>\n            <div>\n                <input\n                    type='text'\n                    onChange={(e) => setName(e.target.value)}\n                    value={name} placeholder='Name Your Pizza'\n                />\n                <button onClick={(e) => {\n                    dispatch(addPizza(name, [crust, cheese, toppings]))\n                }}>\n                    Save Pizza\n                </button>\n            </div>\n            <div className='addButtons'>\n                <div>\n                    <div className='buttonTag'>Size: </div>\n                    <div>{radioComponent(data.crust, addCrust)}</div>\n                    \n                </div>\n                <div>\n                    <div className='buttonTag'>Cheese: </div>\n                    <div>{radioComponent(data.cheese, addCheese)}</div>\n                </div>\n                <div>\n                    <div className='buttonTag'>Toppings: </div>\n                    <div>{multiComponent(data.toppings, addTopping)}</div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Pizza\n","import { useSelector } from 'react-redux'\nimport './styles/PizzaList.css'\n\nfunction PizzaList() {\n    const pizzas = useSelector((state) => state.pizzas)\n    const pizzaList = pizzas.map((pizza, index) => {\n        pizza.composition[2] = pizza.composition[2].map(e => `${e} `)\n        const composition = pizza.composition.map(item => {\n            return(\n                <div className='pizzaComposition'>\n                    {item}\n                </div>\n            )\n        })\n        return (\n            <div key={index} className='pizzaListCard'>\n                <div className='name'>{pizza.name}</div>\n                <div>{composition}</div>\n            </div>\n        )\n    })\n    return (\n        <div className='pizzaList'>\n            {pizzaList}\n        </div>\n    )\n}\n\nexport default PizzaList\n","import './styles/Header.css'\nfunction Header() {\n    return (\n        <div className='header'>\n            <span>Pizza</span>\n            <span>Builder</span>\n        </div>\n    )\n}\n\nexport default Header","export default __webpack_public_path__ + \"static/media/githubLogo.1c95b85d.png\";","import './styles/Footer.css'\nimport logo from './images/githubLogo.png'\nfunction Footer() {\n    return (\n        <div className='footer'>\n            <div>\n                <a href='https://github.com/ChaonengTan/FEW2.3-PizzaOrder'>\n                    <img src={logo}/>\n                </a>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer","import React from 'react';\nimport './components/styles/App.css';\nimport data from './data.json'\n\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducers from './reducers'\nimport Pizza from './components/Pizza';\nimport PizzaList from './components/PizzaList';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nconst store = createStore(reducers);\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Header />\n        <div className='content'>\n          <Pizza data={data}/>\n          <PizzaList/>\n        </div>\n        <Footer />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}